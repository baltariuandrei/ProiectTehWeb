{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\facultate\\\\tehWEB\\\\ProiectTehWeb\\\\react-frontend\\\\src\\\\Components\\\\Professor.js\";\nimport React, { Component } from 'react';\nimport ActivityList from \"../Containers/ActivityList\";\nimport ProfessorStore from \"../Stores/ProfessorStore\";\nimport AddActivityForm from \"../Containers/AddActivityForm\";\nimport Header from \"../Containers/Header\";\nimport '../Style/button.css';\nimport FeedbackStore from \"../Stores/FeedbackStore\";\nimport ActivityStore from \"../Stores/ActivityStore\";\nimport StudentStore from \"../Stores/StudentStore\";\n\nclass Professor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = evt => {\n      let check = false;\n      this.state.activities.forEach(act => {\n        if (act.id == this.state.idActivityFeedback) {\n          console.log(act);\n          check = true;\n        }\n      });\n      console.log(\"ProfessorPage check id for sending to feedback page check: \" + check);\n\n      if (!check) {\n        console.log(\"Feedback-ul pentru aceasta activitate este indisponibil!\");\n        alert(\"Feedback-ul pentru aceasta activitate este indisponibil!\");\n      } else {\n        this.props.history.push('/feedbackforactivity/' + this.state.idActivityFeedback);\n      }\n    };\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.handleShowForm = () => {\n      this.setState({\n        showForm: !this.state.showForm\n      });\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.store = new ProfessorStore();\n    this.storeFeedback = new FeedbackStore();\n    this.storeActivity = new ActivityStore();\n    this.storeStudent = new StudentStore();\n    this.state = {\n      professor: [],\n      activities: [],\n      showForm: false,\n      professorID: 0,\n      name: ' ',\n      start_date: new Date(),\n      end_date: new Date(),\n      feedbacks: [],\n      count_emoji1: 0,\n      count_emoji2: 0,\n      count_emoji3: 0,\n      count_emoji4: 0,\n      activity: {},\n      idActivityFeedback: 0,\n      specificFeedbacksActivity: [],\n      professor: null,\n      nameProf: '',\n      specialty: ''\n    };\n    this.state.professorID = this.props.match.params.id;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.start_date > this.state.end_date || this.state.end_date < this.state.start_date) {\n      alert(\"Data de inceput trebuie sa fie mai mica decat data de sfarsit!\");\n    } else {\n      const activity = {\n        name: this.state.name,\n        start_date: this.state.start_date,\n        end_date: this.state.end_date,\n        count_emoji1: 0,\n        count_emoji2: 0,\n        count_emoji3: 0,\n        count_emoji4: 0\n      };\n      this.store.addOne(activity, this.state.professorID);\n    }\n  }\n\n  componentDidMount() {\n    this.store.getProfessors();\n    this.store.emitter.addListener('GET_PROFESSORS_SUCCESS', () => {\n      this.setState({\n        professor: this.store.professors\n      });\n    });\n    this.store.getAllActivities(this.state.professorID);\n    this.store.emitter.addListener('GET_PROFESSOR_ACTIVITIES_SUCCESS', () => {\n      this.setState({\n        activities: this.store.activities\n      });\n    });\n    this.store.getProfessorById(this.state.professorID);\n    this.store.emitter.addListener('GET_PROFESSOR_SUCCESS', () => {\n      this.setState({\n        professor: this.store.professor,\n        nameProf: this.store.professor.nameProf,\n        specialty: this.store.professor.specialty\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      nameProf: this.state.nameProf,\n      specialty: this.state.specialty,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ActivityList, {\n      activities: this.state.activities,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"containerForFeedbackProfessor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"inputTextProfessorFeedback\",\n      name: \"idActivityFeedback\",\n      placeholder: \"Activity ID\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"btnSeeFeedback\",\n      value: \"Vezi feedback\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"btnAddActivity\",\n      value: \"Adauga activitate\",\n      onClick: this.handleShowForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AddActivityForm, {\n      handleChange: event => this.handleChange(event),\n      handleSubmit: event => this.handleSubmit(event),\n      showForm: this.state.showForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Professor;","map":{"version":3,"sources":["C:/Users/User/Desktop/facultate/tehWEB/ProiectTehWeb/react-frontend/src/Components/Professor.js"],"names":["React","Component","ActivityList","ProfessorStore","AddActivityForm","Header","FeedbackStore","ActivityStore","StudentStore","Professor","constructor","props","handleClick","evt","check","state","activities","forEach","act","id","idActivityFeedback","console","log","alert","history","push","handleChange","setState","target","name","value","handleShowForm","showForm","handleSubmit","bind","store","storeFeedback","storeActivity","storeStudent","professor","professorID","start_date","Date","end_date","feedbacks","count_emoji1","count_emoji2","count_emoji3","count_emoji4","activity","specificFeedbacksActivity","nameProf","specialty","match","params","event","preventDefault","addOne","componentDidMount","getProfessors","emitter","addListener","professors","getAllActivities","getProfessorById","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport ActivityList from \"../Containers/ActivityList\";\r\nimport ProfessorStore from \"../Stores/ProfessorStore\";\r\nimport AddActivityForm from \"../Containers/AddActivityForm\";\r\nimport Header from \"../Containers/Header\";\r\nimport '../Style/button.css';\r\nimport FeedbackStore from \"../Stores/FeedbackStore\";\r\nimport ActivityStore from \"../Stores/ActivityStore\";\r\nimport StudentStore from \"../Stores/StudentStore\";\r\n\r\nclass Professor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.store = new ProfessorStore();\r\n        this.storeFeedback = new FeedbackStore();\r\n        this.storeActivity = new ActivityStore();\r\n        this.storeStudent = new StudentStore();\r\n        this.state = {\r\n            professor: [],\r\n            activities: [],\r\n            showForm: false,\r\n            professorID: 0,\r\n            name: ' ',\r\n            start_date: new Date(),\r\n            end_date: new Date(),\r\n            feedbacks: [],\r\n            count_emoji1: 0,\r\n            count_emoji2: 0,\r\n            count_emoji3: 0,\r\n            count_emoji4: 0,\r\n            activity: {},\r\n            idActivityFeedback: 0,\r\n            specificFeedbacksActivity: [],\r\n            professor: null,\r\n            nameProf: '',\r\n            specialty: ''\r\n        };\r\n        this.state.professorID = this.props.match.params.id;\r\n    }\r\n    \r\n    handleClick = (evt) => {\r\n        let check = false\r\n        this.state.activities.forEach(act => {\r\n            if (act.id == this.state.idActivityFeedback) {\r\n                console.log(act)\r\n                check = true\r\n            }\r\n        })\r\n        \r\n        console.log(\"ProfessorPage check id for sending to feedback page check: \" + check)\r\n        if (!check) \r\n        {\r\n            console.log(\"Feedback-ul pentru aceasta activitate este indisponibil!\")\r\n            alert(\"Feedback-ul pentru aceasta activitate este indisponibil!\")\r\n        } else \r\n        {\r\n         this.props.history.push('/feedbackforactivity/' + this.state.idActivityFeedback)\r\n        }\r\n    }\r\n\r\n    handleChange = (evt) => {\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        })\r\n    }\r\n\r\n    handleShowForm = () => {\r\n        this.setState({\r\n            showForm: !this.state.showForm\r\n        })\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (this.state.start_date > this.state.end_date || this.state.end_date < this.state.start_date) {\r\n            alert(\"Data de inceput trebuie sa fie mai mica decat data de sfarsit!\");\r\n        } else {\r\n            const activity = {name: this.state.name, start_date: this.state.start_date, end_date: this.state.end_date,\r\n                count_emoji1: 0, count_emoji2: 0, count_emoji3: 0, count_emoji4: 0\r\n            };\r\n            this.store.addOne(activity, this.state.professorID)\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.store.getProfessors()\r\n        this.store.emitter.addListener('GET_PROFESSORS_SUCCESS', () => {\r\n            this.setState({\r\n                professor: this.store.professors\r\n            })\r\n        });\r\n\r\n        this.store.getAllActivities(this.state.professorID)\r\n\r\n        this.store.emitter.addListener('GET_PROFESSOR_ACTIVITIES_SUCCESS', () => {\r\n            this.setState({\r\n                activities: this.store.activities\r\n            })\r\n        });\r\n        \r\n        this.store.getProfessorById(this.state.professorID);\r\n        this.store.emitter.addListener('GET_PROFESSOR_SUCCESS',()=>{\r\n            this.setState({\r\n                professor:this.store.professor,\r\n                nameProf:this.store.professor.nameProf,\r\n                specialty:this.store.professor.specialty\r\n            })\r\n        });\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n            <div>\r\n                <Header nameProf={this.state.nameProf} specialty={this.state.specialty}/>\r\n                <ActivityList activities={this.state.activities}/>\r\n                \r\n                <div className=\"containerForFeedbackProfessor\">\r\n                    <input type=\"text\" className=\"inputTextProfessorFeedback\" name=\"idActivityFeedback\" \r\n                        placeholder=\"Activity ID\" onChange={this.handleChange}/>\r\n                    <input type=\"button\" className=\"btnSeeFeedback\" value=\"Vezi feedback\"\r\n                        onClick={this.handleClick}/>\r\n                </div>\r\n                <input type=\"button\" className=\"btnAddActivity\" value=\"Adauga activitate\"\r\n                       onClick={this.handleShowForm}/>\r\n                <AddActivityForm\r\n                    handleChange={(event) => this.handleChange(event)}\r\n                    handleSubmit={(event) => this.handleSubmit(event)}\r\n                    showForm={this.state.showForm}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Professor;"]},"metadata":{},"sourceType":"module"}