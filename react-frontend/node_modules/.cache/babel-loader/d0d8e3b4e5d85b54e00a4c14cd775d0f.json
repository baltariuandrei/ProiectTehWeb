{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\facultate\\\\tehWEB\\\\ProiectTehWeb\\\\react-frontend\\\\src\\\\Components\\\\FeedbackPage.js\";\nimport React, { Component } from 'react';\nimport '../Style/feedbackStyle.css';\nimport HeaderFeedback from \"../Containers/HeaderFeedback\";\nimport FeedbackStore from \"../Stores/FeedbackStore\";\nimport ActivityStore from \"../Stores/ActivityStore\";\nimport StudentStore from \"../Stores/StudentStore\";\n\nclass FeedbackPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showText: false,\n      text: \"\",\n      activityID: 0,\n      studentID: 0,\n      activity: {}\n    };\n    this.store = new FeedbackStore();\n    this.storeActivity = new ActivityStore();\n    this.storeStudent = new StudentStore();\n    this.state.studentID = this.props.match.params.stud_id;\n    this.state.activityID = this.props.match.params.activity_id;\n    this.storeStudent.getActivityById(this.state.activityID);\n    this.storeStudent.emitter.addListener('GET_ACTIVITY_SUCCESS', () => {\n      this.setState({\n        activity: this.storeStudent.activity\n      });\n    });\n\n    this.onClickImage = e => {\n      this.setState({\n        showText: true,\n        text: e.target.alt\n      });\n      let tempDate = new Date();\n\n      if (e.target.name === \"smiley_face\") {\n        let time_stamp = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate() + ' ' + tempDate.getHours() + ':' + tempDate.getMinutes() + ':' + tempDate.getSeconds() + ' timeZone:' + Intl.DateTimeFormat().resolvedOptions().timeZone;\n        console.log(Intl.DateTimeFormat().resolvedOptions().timeZone);\n        const feedback = {\n          time_stamp: time_stamp,\n          id_activity: this.state.activityID,\n          emoji: \"smiley face\",\n          studentId: this.state.studentID\n        };\n        this.store.addFeedback(feedback);\n        console.log(\"clicked smiley_face -> should update count for emoji1\");\n        console.log(\"This should be the current activity ID: \" + this.state.activityID);\n        this.storeActivity.updateCountEmoji1(this.state.activityID);\n      } else if (e.target.name === \"frowny_face\") {\n        let time_stamp = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate() + ' ' + tempDate.getHours() + ':' + tempDate.getMinutes() + ':' + tempDate.getSeconds() + ' timeZone:' + Intl.DateTimeFormat().resolvedOptions().timeZone;\n        const feedback = {\n          time_stamp: time_stamp,\n          id_activity: this.state.activityID,\n          emoji: \"frowny face\",\n          studentId: this.state.studentID\n        };\n        this.store.addFeedback(feedback);\n        console.log(\"clicked frowny_face -> should update count for emoji2\");\n        console.log(\"This should be the current activity ID: \" + this.state.activityID);\n        this.storeActivity.updateCountEmoji2(this.state.activityID);\n      } else if (e.target.name === \"surprised_face\") {\n        let time_stamp = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate() + ' ' + tempDate.getHours() + ':' + tempDate.getMinutes() + ':' + tempDate.getSeconds() + ' timeZone:' + Intl.DateTimeFormat().resolvedOptions().timeZone;\n        const feedback = {\n          time_stamp: time_stamp,\n          id_activity: this.state.activityID,\n          emoji: \"surprised face\",\n          studentId: this.state.studentID\n        };\n        this.store.addFeedback(feedback);\n        console.log(\"clicked surprised_face -> should update count for emoji3\");\n        console.log(\"This should be the current activity ID: \" + this.state.activityID);\n        this.storeActivity.updateCountEmoji3(this.state.activityID);\n      } else if (e.target.name === \"confused_face\") {\n        let time_stamp = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate() + ' ' + tempDate.getHours() + ':' + tempDate.getMinutes() + ':' + tempDate.getSeconds() + ' timeZone:' + Intl.DateTimeFormat().resolvedOptions().timeZone;\n        const feedback = {\n          time_stamp: time_stamp,\n          id_activity: this.state.activityID,\n          emoji: \"confused face\",\n          studentId: this.state.studentID\n        };\n        this.store.addFeedback(feedback);\n        console.log(\"clicked confused_face -> should update count for emoji4\");\n        console.log(\"This should be the current activity ID: \" + this.state.activityID);\n        this.storeActivity.updateCountEmoji4(this.state.activityID);\n      }\n    };\n\n    this.viewText = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, `Feedback-ul ales este ${this.state.text}`));\n    };\n  }\n\n  render() {\n    const styleIcon = {\n      width: '200px',\n      height: '200px'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(HeaderFeedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, \"Alege o reactie\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"images\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://www.clipartkey.com/mpngs/m/296-2968748_wow-emoji-png-smiley-face-with-thumb-up.png\",\n      name: \"smiley_face\",\n      alt: \"smiley face\",\n      onClick: this.onClickImage,\n      style: styleIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://i.pinimg.com/564x/4f/74/ad/4f74ad082bce5e05d8df56e28470342f.jpg\",\n      name: \"frowny_face\",\n      alt: \"frowny face\",\n      onClick: this.onClickImage,\n      style: styleIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"images\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://clipartcraft.com/images/surprised-emoji-clipart-5.png\",\n      name: \"surprised_face\",\n      alt: \"surprised face\",\n      onClick: this.onClickImage,\n      style: styleIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://i.pinimg.com/736x/e2/d6/29/e2d62981a6d9aee66a6fec8af6ebdbde.jpg?b=t\",\n      name: \"confused_face\",\n      alt: \"confused face\",\n      onClick: this.onClickImage,\n      style: styleIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    })), this.state.showText === true && this.viewText());\n  }\n\n}\n\nexport default FeedbackPage;","map":{"version":3,"sources":["C:/Users/User/Desktop/facultate/tehWEB/ProiectTehWeb/react-frontend/src/Components/FeedbackPage.js"],"names":["React","Component","HeaderFeedback","FeedbackStore","ActivityStore","StudentStore","FeedbackPage","constructor","props","state","showText","text","activityID","studentID","activity","store","storeActivity","storeStudent","match","params","stud_id","activity_id","getActivityById","emitter","addListener","setState","onClickImage","e","target","alt","tempDate","Date","name","time_stamp","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Intl","DateTimeFormat","resolvedOptions","timeZone","console","log","feedback","id_activity","emoji","studentId","addFeedback","updateCountEmoji1","updateCountEmoji2","updateCountEmoji3","updateCountEmoji4","viewText","render","styleIcon","width","height"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport '../Style/feedbackStyle.css';\r\nimport HeaderFeedback from \"../Containers/HeaderFeedback\";\r\nimport FeedbackStore from \"../Stores/FeedbackStore\";\r\nimport ActivityStore from \"../Stores/ActivityStore\";\r\nimport StudentStore from \"../Stores/StudentStore\";\r\n\r\nclass FeedbackPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showText: false,\r\n            text: \"\",\r\n            activityID: 0,\r\n            studentID: 0,\r\n            activity:{}\r\n        };\r\n\r\n        this.store = new FeedbackStore();\r\n        this.storeActivity = new ActivityStore();\r\n        this.storeStudent = new StudentStore();\r\n        this.state.studentID = this.props.match.params.stud_id;\r\n        this.state.activityID = this.props.match.params.activity_id;\r\n        this.storeStudent.getActivityById(this.state.activityID);\r\n        this.storeStudent.emitter.addListener('GET_ACTIVITY_SUCCESS', () => {\r\n            this.setState({\r\n                activity: this.storeStudent.activity\r\n            })\r\n        });\r\n\r\n        this.onClickImage = (e) => {\r\n            this.setState({showText: true, text: e.target.alt});\r\n            let tempDate = new Date();\r\n            if (e.target.name === \"smiley_face\") \r\n            {\r\n                let time_stamp = tempDate.getFullYear()\r\n                    + '-' + (tempDate.getMonth() + 1)\r\n                    + '-' + tempDate.getDate()\r\n                    + ' ' + tempDate.getHours()\r\n                    + ':' + tempDate.getMinutes()\r\n                    + ':' + tempDate.getSeconds()\r\n                    + ' timeZone:' + Intl.DateTimeFormat().resolvedOptions().timeZone\r\n                    console.log(Intl.DateTimeFormat().resolvedOptions().timeZone)\r\n                const feedback = {\r\n                    time_stamp: time_stamp,\r\n                    id_activity: this.state.activityID,\r\n                    emoji: \"smiley face\",\r\n                    studentId: this.state.studentID\r\n                };\r\n                this.store.addFeedback(feedback);\r\n                console.log(\"clicked smiley_face -> should update count for emoji1\")\r\n                console.log(\"This should be the current activity ID: \" + this.state.activityID)\r\n                this.storeActivity.updateCountEmoji1(this.state.activityID)\r\n                \r\n            } else if (e.target.name === \"frowny_face\") \r\n            {\r\n                let time_stamp = tempDate.getFullYear()\r\n                    + '-' + (tempDate.getMonth() + 1)\r\n                    + '-' + tempDate.getDate()\r\n                    + ' ' + tempDate.getHours()\r\n                    + ':' + tempDate.getMinutes()\r\n                    + ':' + tempDate.getSeconds()\r\n                    + ' timeZone:' + Intl.DateTimeFormat().resolvedOptions().timeZone\r\n                const feedback = {\r\n                    time_stamp: time_stamp,\r\n                    id_activity: this.state.activityID,\r\n                    emoji: \"frowny face\",\r\n                    studentId: this.state.studentID\r\n                };\r\n                this.store.addFeedback(feedback);\r\n                \r\n                console.log(\"clicked frowny_face -> should update count for emoji2\")\r\n                console.log(\"This should be the current activity ID: \" + this.state.activityID)\r\n                this.storeActivity.updateCountEmoji2(this.state.activityID)\r\n\r\n            } else if (e.target.name === \"surprised_face\") \r\n            {\r\n                let time_stamp = tempDate.getFullYear()\r\n                    + '-' + (tempDate.getMonth() + 1)\r\n                    + '-' + tempDate.getDate()\r\n                    + ' ' + tempDate.getHours()\r\n                    + ':' + tempDate.getMinutes()\r\n                    + ':' + tempDate.getSeconds()\r\n                    + ' timeZone:' + Intl.DateTimeFormat().resolvedOptions().timeZone\r\n                const feedback = {\r\n                    time_stamp: time_stamp,\r\n                    id_activity: this.state.activityID,\r\n                    emoji: \"surprised face\",\r\n                    studentId: this.state.studentID\r\n                };\r\n                this.store.addFeedback(feedback);\r\n                \r\n                console.log(\"clicked surprised_face -> should update count for emoji3\")\r\n                console.log(\"This should be the current activity ID: \" + this.state.activityID)\r\n                this.storeActivity.updateCountEmoji3(this.state.activityID)\r\n                \r\n            } else if (e.target.name === \"confused_face\") \r\n            {\r\n                let time_stamp = tempDate.getFullYear()\r\n                    + '-' + (tempDate.getMonth() + 1)\r\n                    + '-' + tempDate.getDate()\r\n                    + ' ' + tempDate.getHours()\r\n                    + ':' + tempDate.getMinutes()\r\n                    + ':' + tempDate.getSeconds()\r\n                    + ' timeZone:' + Intl.DateTimeFormat().resolvedOptions().timeZone\r\n                const feedback = {\r\n                    time_stamp: time_stamp,\r\n                    id_activity: this.state.activityID,\r\n                    emoji: \"confused face\",\r\n                    studentId: this.state.studentID\r\n                };\r\n                this.store.addFeedback(feedback);\r\n                \r\n                console.log(\"clicked confused_face -> should update count for emoji4\")\r\n                console.log(\"This should be the current activity ID: \" + this.state.activityID)\r\n                this.storeActivity.updateCountEmoji4(this.state.activityID)\r\n            }\r\n\r\n        };\r\n        this.viewText = () => {\r\n            return (<div className=\"container right\">\r\n                <div className=\"content\">\r\n                    {`Feedback-ul ales este ${this.state.text}`}\r\n                </div>\r\n            </div>);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const styleIcon = {\r\n            width: '200px',\r\n            height: '200px'\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <HeaderFeedback/>\r\n                <h1 align=\"center\">Alege o reactie</h1>\r\n                <div id=\"images\" align=\"center\">\r\n                    <img\r\n                        src=\"https://www.clipartkey.com/mpngs/m/296-2968748_wow-emoji-png-smiley-face-with-thumb-up.png\"\r\n                        name=\"smiley_face\"\r\n                        alt=\"smiley face\" onClick={this.onClickImage} style={styleIcon}/>\r\n                    <img\r\n                        src=\"https://i.pinimg.com/564x/4f/74/ad/4f74ad082bce5e05d8df56e28470342f.jpg\"\r\n                        name=\"frowny_face\"\r\n                        alt=\"frowny face\" onClick={this.onClickImage} style={styleIcon}/>\r\n\r\n                </div>\r\n                <div id=\"images\" align=\"center\">\r\n                    <img src=\"https://clipartcraft.com/images/surprised-emoji-clipart-5.png\"\r\n                         name=\"surprised_face\"\r\n                         alt=\"surprised face\" onClick={this.onClickImage} style={styleIcon}/>\r\n                    <img src=\"https://i.pinimg.com/736x/e2/d6/29/e2d62981a6d9aee66a6fec8af6ebdbde.jpg?b=t\"\r\n                         name=\"confused_face\"\r\n                         alt=\"confused face\" onClick={this.onClickImage} style={styleIcon}/>\r\n                </div>\r\n                {this.state.showText === true && this.viewText()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FeedbackPage;\r\n"]},"metadata":{},"sourceType":"module"}