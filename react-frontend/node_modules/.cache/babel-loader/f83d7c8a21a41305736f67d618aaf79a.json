{"ast":null,"code":"import { EventEmitter } from 'fbemitter';\nconst SERVER = 'http://localhost:5000';\n\nclass ProfessorStore {\n  constructor() {\n    this.professors = [];\n    this.activities = [];\n    this.professorsDB = [];\n    this.professor = null;\n    this.emitter = new EventEmitter();\n  }\n\n  async getProfessors() {\n    try {\n      let response = await fetch(`${SERVER}/professor-api/professors`);\n      let data = await response.json();\n      data.forEach(prof => {\n        this.professorsDB.push({\n          id: prof.id,\n          usernameDB: prof.username,\n          passwordDB: prof.pass\n        });\n      });\n      this.emitter.emit('GET_PROFESSORS_SUCCESS');\n    } catch (err) {\n      console.log(\"eroare\");\n      console.warn(err);\n      this.emitter.emit('GET_PROFESSORS_ERROR');\n    }\n  }\n\n  async getProfessorById(professorID) {\n    try {\n      let response = await fetch(`${SERVER}/professor-api/professors/${professorID}`);\n      let data = await response.json();\n      this.professor = {\n        id: data.id,\n        nameProf: data.name,\n        specialty: data.specialty\n      };\n      this.emitter.emit('GET_PROFESSOR_SUCCESS');\n    } catch (err) {\n      console.warn(err);\n      this.emitter.emit('GET_PROFESSOR_ERROR');\n    }\n  }\n\n  async addOne(activity, professorID) {\n    try {\n      await fetch(`${SERVER}/professor-api/professors/${professorID}/activities/add `, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(activity)\n      });\n      this.getAllActivities(professorID);\n    } catch (err) {\n      console.warn(err);\n      this.emitter.emit('ADD_ACTIVITY_ERROR');\n    }\n  }\n\n  async getAllActivities(professorID) {\n    try {\n      let response = await fetch(`${SERVER}/professor-api/professors/${professorID}/activities`);\n      let data = await response.json();\n      this.activities = data;\n      this.emitter.emit('GET_PROFESSOR_ACTIVITIES_SUCCESS');\n    } catch (err) {\n      console.warn(err);\n      this.emitter.emit('GET_PROFESSOR_ACTIVITIES_ERROR');\n    }\n  }\n\n}\n\nexport default ProfessorStore;","map":{"version":3,"sources":["C:/Users/User/Desktop/facultate/tehWEB/ProiectTehWeb/react-frontend/src/Stores/ProfessorStore.js"],"names":["EventEmitter","SERVER","ProfessorStore","constructor","professors","activities","professorsDB","professor","emitter","getProfessors","response","fetch","data","json","forEach","prof","push","id","usernameDB","username","passwordDB","pass","emit","err","console","log","warn","getProfessorById","professorID","nameProf","name","specialty","addOne","activity","method","headers","body","JSON","stringify","getAllActivities"],"mappings":"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","sourcesContent":["import {EventEmitter} from 'fbemitter'\r\n\r\nconst SERVER = 'http://localhost:5000';\r\n\r\nclass ProfessorStore {\r\n    constructor() {\r\n        this.professors = [];\r\n        this.activities = [];\r\n        this.professorsDB = [];\r\n        this.professor = null;\r\n        this.emitter = new EventEmitter();\r\n    }\r\n\r\n    async getProfessors() \r\n    {\r\n        try {\r\n            let response = await fetch(`${SERVER}/professor-api/professors`)\r\n            let data = await response.json();\r\n            data.forEach(prof => {\r\n                this.professorsDB.push({id: prof.id, usernameDB: prof.username, passwordDB: prof.pass});\r\n            });\r\n            this.emitter.emit('GET_PROFESSORS_SUCCESS');\r\n        } catch (err) {\r\n            console.log(\"eroare\")\r\n            console.warn(err);\r\n            this.emitter.emit('GET_PROFESSORS_ERROR');\r\n        }\r\n    }\r\n    \r\n     async getProfessorById(professorID) \r\n     {\r\n        try {\r\n            let response = await fetch(`${SERVER}/professor-api/professors/${professorID}`)\r\n            let data = await response.json();\r\n            this.professor = {id: data.id, nameProf: data.name, specialty: data.specialty};\r\n            this.emitter.emit('GET_PROFESSOR_SUCCESS');\r\n\r\n        } catch (err) {\r\n            console.warn(err);\r\n            this.emitter.emit('GET_PROFESSOR_ERROR');\r\n        }\r\n    }\r\n    \r\n    async addOne(activity, professorID) \r\n    {\r\n        try {\r\n            await fetch(`${SERVER}/professor-api/professors/${professorID}/activities/add `, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(activity)\r\n            })\r\n            this.getAllActivities(professorID)\r\n        } catch (err) {\r\n            console.warn(err)\r\n            this.emitter.emit('ADD_ACTIVITY_ERROR')\r\n        }\r\n    }\r\n\r\n    async getAllActivities(professorID) \r\n    {\r\n        try {\r\n            let response = await fetch(`${SERVER}/professor-api/professors/${professorID}/activities`)\r\n            let data = await response.json();\r\n            this.activities = data;\r\n            this.emitter.emit('GET_PROFESSOR_ACTIVITIES_SUCCESS');\r\n\r\n        } catch (err) {\r\n            console.warn(err);\r\n            this.emitter.emit('GET_PROFESSOR_ACTIVITIES_ERROR');\r\n        }\r\n    }\r\n}\r\n\r\nexport default ProfessorStore;\r\n"]},"metadata":{},"sourceType":"module"}