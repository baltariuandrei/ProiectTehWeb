{"ast":null,"code":"import { EventEmitter } from 'fbemitter';\nconst SERVER = 'http://localhost:5000';\n\nclass ActivityStore {\n  constructor() {\n    this.activities = [];\n    this.emitter = new EventEmitter();\n  }\n\n  async getActivities() {\n    try {\n      console.log(\"ActivityStore -> getActivities() try\");\n      let response = await fetch(`${SERVER}/activity-api/activities`);\n      let data = await response.json();\n      this.activities = data;\n      this.emitter.emit('GET_ACTIVITIES_SUCCESS');\n    } catch (err) {\n      console.warn(err);\n      console.log(\"ActivityStore -> getActivities() catch-err\");\n      this.emitter.emit('GET_ACTIVITIES_ERROR');\n    }\n  }\n\n  async updateCountEmoji1(activityId) {\n    console.log(\"ActivityStore -> updateCountEmoji1\");\n\n    try {\n      await fetch(`${SERVER}/activity-api/activities/${activityId}/update-count-emoji1`, {\n        method: 'put'\n      });\n    } catch (err) {\n      console.warn(err);\n      this.emitter.emit('UPDATE_ACTIVITY_ERROR');\n    }\n  }\n\n  async updateCountEmoji2(activityId) {\n    console.log(\"ActivityStore -> updateCountEmoji1\");\n\n    try {\n      await fetch(`${SERVER}/activity-api/activities/${activityId}/update-count-emoji2`, {\n        method: 'put'\n      });\n    } catch (err) {\n      console.warn(err);\n      this.emitter.emit('UPDATE_ACTIVITY_ERROR');\n    }\n  }\n\n  async updateCountEmoji3(activityId) {\n    console.log(\"ActivityStore -> updateCountEmoji1\");\n\n    try {\n      await fetch(`${SERVER}/activity-api/activities/${activityId}/update-count-emoji3`, {\n        method: 'put'\n      });\n    } catch (err) {\n      console.warn(err);\n      this.emitter.emit('UPDATE_ACTIVITY_ERROR');\n    }\n  }\n\n  async updateCountEmoji4(activityId) {\n    console.log(\"ActivityStore -> updateCountEmoji4\");\n\n    try {\n      await fetch(`${SERVER}/activity-api/activities/${activityId}/update-count-emoji4`, {\n        method: 'put'\n      });\n    } catch (err) {\n      console.warn(err);\n      this.emitter.emit('UPDATE_ACTIVITY_ERROR');\n    }\n  }\n\n  async updateEmoji(activityID, activity) {\n    try {\n      await fetch(`${SERVER}/activity-api/activities/${activityID}`, {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(activity)\n      });\n      this.getActivities();\n    } catch (err) {\n      console.warn(err);\n      this.emitter.emit('UPDATE_ACTIVITY_ERROR');\n    }\n  }\n\n}\n\nexport default ActivityStore;","map":{"version":3,"sources":["C:/Users/User/Desktop/facultate/tehWEB/ProiectTehWeb/react-frontend/src/Stores/ActivityStore.js"],"names":["EventEmitter","SERVER","ActivityStore","constructor","activities","emitter","getActivities","console","log","response","fetch","data","json","emit","err","warn","updateCountEmoji1","activityId","method","updateCountEmoji2","updateCountEmoji3","updateCountEmoji4","updateEmoji","activityID","activity","headers","body","JSON","stringify"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,WAA3B;AAEA,MAAMC,MAAM,GAAG,uBAAf;;AAEA,MAAMC,aAAN,CAAoB;AAChBC,EAAAA,WAAW,GAAG;AACV,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,OAAL,GAAe,IAAIL,YAAJ,EAAf;AACH;;AAED,QAAMM,aAAN,GAAsB;AAClB,QAAI;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,MAAO,0BAAX,CAA1B;AACA,UAAIU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACA,WAAKR,UAAL,GAAkBO,IAAlB;AAEA,WAAKN,OAAL,CAAaQ,IAAb,CAAkB,wBAAlB;AAGH,KATD,CASE,OAAOC,GAAP,EAAY;AACVP,MAAAA,OAAO,CAACQ,IAAR,CAAaD,GAAb;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACA,WAAKH,OAAL,CAAaQ,IAAb,CAAkB,sBAAlB;AACH;AACJ;;AAED,QAAMG,iBAAN,CAAwBC,UAAxB,EAAoC;AAChCV,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;;AACA,QAAI;AACA,YAAME,KAAK,CAAE,GAAET,MAAO,4BAA2BgB,UAAW,sBAAjD,EAAwE;AAC/EC,QAAAA,MAAM,EAAG;AADsE,OAAxE,CAAX;AAGH,KAJD,CAIE,OAAOJ,GAAP,EAAY;AACVP,MAAAA,OAAO,CAACQ,IAAR,CAAaD,GAAb;AACA,WAAKT,OAAL,CAAaQ,IAAb,CAAkB,uBAAlB;AACH;AACJ;;AAED,QAAMM,iBAAN,CAAwBF,UAAxB,EAAoC;AAChCV,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;;AACA,QAAI;AACA,YAAME,KAAK,CAAE,GAAET,MAAO,4BAA2BgB,UAAW,sBAAjD,EAAwE;AAC/EC,QAAAA,MAAM,EAAG;AADsE,OAAxE,CAAX;AAGH,KAJD,CAIE,OAAOJ,GAAP,EAAY;AACVP,MAAAA,OAAO,CAACQ,IAAR,CAAaD,GAAb;AACA,WAAKT,OAAL,CAAaQ,IAAb,CAAkB,uBAAlB;AACH;AACJ;;AAED,QAAMO,iBAAN,CAAwBH,UAAxB,EAAoC;AAChCV,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;;AACA,QAAI;AACA,YAAME,KAAK,CAAE,GAAET,MAAO,4BAA2BgB,UAAW,sBAAjD,EAAwE;AAC/EC,QAAAA,MAAM,EAAG;AADsE,OAAxE,CAAX;AAGH,KAJD,CAIE,OAAOJ,GAAP,EAAY;AACVP,MAAAA,OAAO,CAACQ,IAAR,CAAaD,GAAb;AACA,WAAKT,OAAL,CAAaQ,IAAb,CAAkB,uBAAlB;AACH;AACJ;;AAED,QAAMQ,iBAAN,CAAwBJ,UAAxB,EAAoC;AAChCV,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;;AACA,QAAI;AACA,YAAME,KAAK,CAAE,GAAET,MAAO,4BAA2BgB,UAAW,sBAAjD,EAAwE;AAC/EC,QAAAA,MAAM,EAAG;AADsE,OAAxE,CAAX;AAGH,KAJD,CAIE,OAAOJ,GAAP,EAAY;AACVP,MAAAA,OAAO,CAACQ,IAAR,CAAaD,GAAb;AACA,WAAKT,OAAL,CAAaQ,IAAb,CAAkB,uBAAlB;AACH;AACJ;;AAGD,QAAMS,WAAN,CAAkBC,UAAlB,EAA6BC,QAA7B,EAAuC;AACnC,QAAI;AACA,YAAMd,KAAK,CAAE,GAAET,MAAO,4BAA2BsB,UAAW,EAAjD,EAAoD;AAC3DL,QAAAA,MAAM,EAAE,KADmD;AAE3DO,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFkD;AAK3DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,QAAf;AALqD,OAApD,CAAX;AAQA,WAAKlB,aAAL;AACH,KAVD,CAUE,OAAOQ,GAAP,EAAY;AACVP,MAAAA,OAAO,CAACQ,IAAR,CAAaD,GAAb;AACA,WAAKT,OAAL,CAAaQ,IAAb,CAAkB,uBAAlB;AACH;AACJ;;AAvFe;;AA0FpB,eAAeX,aAAf","sourcesContent":["import {EventEmitter} from 'fbemitter'\r\n\r\nconst SERVER = 'http://localhost:5000';\r\n\r\nclass ActivityStore {\r\n    constructor() {\r\n        this.activities = [];\r\n        this.emitter = new EventEmitter();\r\n    }\r\n\r\n    async getActivities() {\r\n        try {\r\n            console.log(\"ActivityStore -> getActivities() try\")\r\n            let response = await fetch(`${SERVER}/activity-api/activities`)\r\n            let data = await response.json();\r\n            this.activities = data;\r\n            \r\n            this.emitter.emit('GET_ACTIVITIES_SUCCESS');\r\n\r\n\r\n        } catch (err) {\r\n            console.warn(err);\r\n            console.log(\"ActivityStore -> getActivities() catch-err\")\r\n            this.emitter.emit('GET_ACTIVITIES_ERROR');\r\n        }\r\n    }\r\n    \r\n    async updateCountEmoji1(activityId) {\r\n        console.log(\"ActivityStore -> updateCountEmoji1\")\r\n        try {\r\n            await fetch(`${SERVER}/activity-api/activities/${activityId}/update-count-emoji1`, {\r\n                method : 'put'\r\n            })\r\n        } catch (err) {\r\n            console.warn(err)\r\n            this.emitter.emit('UPDATE_ACTIVITY_ERROR')\r\n        }\r\n    }\r\n    \r\n    async updateCountEmoji2(activityId) {\r\n        console.log(\"ActivityStore -> updateCountEmoji1\")\r\n        try {\r\n            await fetch(`${SERVER}/activity-api/activities/${activityId}/update-count-emoji2`, {\r\n                method : 'put'\r\n            })\r\n        } catch (err) {\r\n            console.warn(err)\r\n            this.emitter.emit('UPDATE_ACTIVITY_ERROR')\r\n        }\r\n    }\r\n    \r\n    async updateCountEmoji3(activityId) {\r\n        console.log(\"ActivityStore -> updateCountEmoji1\")\r\n        try {\r\n            await fetch(`${SERVER}/activity-api/activities/${activityId}/update-count-emoji3`, {\r\n                method : 'put'\r\n            })\r\n        } catch (err) {\r\n            console.warn(err)\r\n            this.emitter.emit('UPDATE_ACTIVITY_ERROR')\r\n        }\r\n    }\r\n    \r\n    async updateCountEmoji4(activityId) {\r\n        console.log(\"ActivityStore -> updateCountEmoji4\")\r\n        try {\r\n            await fetch(`${SERVER}/activity-api/activities/${activityId}/update-count-emoji4`, {\r\n                method : 'put'\r\n            })\r\n        } catch (err) {\r\n            console.warn(err)\r\n            this.emitter.emit('UPDATE_ACTIVITY_ERROR')\r\n        }\r\n    }\r\n\r\n\r\n    async updateEmoji(activityID,activity) {\r\n        try {\r\n            await fetch(`${SERVER}/activity-api/activities/${activityID}`, {\r\n                method: 'put',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(activity)\r\n            })\r\n\r\n            this.getActivities();\r\n        } catch (err) {\r\n            console.warn(err)\r\n            this.emitter.emit('UPDATE_ACTIVITY_ERROR')\r\n        }\r\n    }\r\n}\r\n\r\nexport default ActivityStore;"]},"metadata":{},"sourceType":"module"}